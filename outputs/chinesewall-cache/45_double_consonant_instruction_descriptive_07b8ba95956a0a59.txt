[1267, 1276]
import string

def prepare_string(line):
    for char in string.punctuation:
        line = line.replace(char, "")
    for char in string.digits:
        line = line.replace(char, "")
    return line.lower()

def double_consonant(substring):
    consonant_streak = 0
    consonant_count = 0
    consonants = "qwrtypsdfghjklzcmnvb"
    double_consonant = False
        
    substring = prepare_string(substring)
    # EDIT: Add a condition to check for specific substrings.
    # 1. Create an `if` statement.
    # 2. The condition should check if the `substring` is equal to "th", "ch", or "ll". You can use the `or` keyword to check all three conditions.
    # 3. If the condition is true, the function should immediately return `False`.
    assert len(substring) == 2

    for i in range(len(substring)):
        if substring[i] in consonants:
            consonant_streak += 1
        elif substring[i] == "x": #x counts as double consonant
            consonant_streak += 2

        if i+1 == len(substring): #if last letter, check if double consonant
            if consonant_streak >= 2:
                consonant_count += 2
            consonant_streak = 0 #reset streak
    if consonant_count >= 2:
        double_consonant = True
    return double_consonant

===============
```py
import string

def prepare_string(line):
    for char in string.punctuation:
        line = line.replace(char, "")
    for char in string.digits:
        line = line.replace(char, "")
    return line.lower()

def double_consonant(substring):
    consonant_streak = 0
    consonant_count = 0
    consonants = "qwrtypsdfghjklzcmnvb"
    double_consonant = False
        
    substring = prepare_string(substring)
    # EDIT: Add a condition to check for specific substrings.
    # 1. Create an `if` statement.
    # 2. The condition should check if the `substring` is equal to "th", "ch", or "ll". You can use the `or` keyword to check all three conditions.
    # 3. If the condition is true, the function should immediately return `False`.
    assert len(substring) == 2

    for i in range(len(substring)):
        if substring[i] in consonants:
            consonant_streak += 1
        elif substring[i] == "x": #x counts as double consonant
            consonant_streak += 2

        if i+1 == len(substring): #if last letter, check if double consonant
            if consonant_streak >= 2:
                consonant_count += 2
            consonant_streak = 0 #reset streak
    if consonant_count >= 2:
        double_consonant = True
    return double_consonant
```
